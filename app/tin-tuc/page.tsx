"use client"

import React, { useState } from 'react'
import Image from "next/image"
import Link from "next/link"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Button } from "@/components/ui/button"
import { Sheet, SheetContent, SheetTrigger } from "@/components/ui/sheet"
import { Calendar, ArrowRight, Phone, Mail, Clock, Menu, ChevronDown } from "lucide-react"
import { getImagePath, navigateTo } from "@/lib/utils"
import Footer from "@/components/Footer"
import UnifiedRegistrationForm from "@/components/UnifiedRegistrationForm"

// Mock data for news articles
const newsArticles = [
  {
    id: 1,
    title: "üéâ RA M·∫ÆT TRUNG T√ÇM NGHI√äN C·ª®U ·ª®NG D·ª§NG C√ÇN B·∫∞NG C·∫§U TR√öC C∆† TH·ªÇ NAGEN",
    excerpt: "Ng√†y 09/10/2025, t·∫°i H√† N·ªôi, Trung t√¢m Nghi√™n c·ª©u ·ª®ng d·ª•ng C√¢n b·∫±ng C·∫•u tr√∫c C∆° th·ªÉ Nagen ƒë√£ ch√≠nh th·ª©c ra m·∫Øt d∆∞·ªõi s·ª± ch·ª©ng ki·∫øn c·ªßa c√°c l√£nh ƒë·∫°o Vi·ªán Nghi√™n c·ª©u S·ª©c kh·ªèe Ng∆∞·ªùi cao tu·ªïi v√† Y t·∫ø C·ªông ƒë·ªìng.",
    image: "/images/news/trung-tam-nghien-cuu.jpg",
    publishDate: "2025-10-09",
    category: "S·ª± ki·ªán quan tr·ªçng",
    featured: true
  },
  {
    id: 2,
    title: "Nghi√™n c·ª©u m·ªõi v·ªÅ hi·ªáu qu·∫£ c·ªßa t·∫•m l√≥t NAGEN trong ƒëi·ªÅu tr·ªã b√†n ch√¢n b·∫πt",
    excerpt: "K·∫øt qu·∫£ nghi√™n c·ª©u t·ª´ ƒê·∫°i h·ªçc Y H√† N·ªôi cho th·∫•y hi·ªáu qu·∫£ v∆∞·ª£t tr·ªôi c·ªßa t·∫•m l√≥t NAGEN trong vi·ªác c·∫£i thi·ªán t√¨nh tr·∫°ng b√†n ch√¢n b·∫πt.",
    image: "/images/news/research-study.jpg",
    publishDate: "2024-03-10",
    category: "Nghi√™n c·ª©u",
    featured: false
  },
  {
    id: 3,
    title: "NAGEN h·ª£p t√°c v·ªõi c√°c trung t√¢m y t·∫ø tr√™n to√†n qu·ªëc",
    excerpt: "Nh·∫±m mang l·∫°i d·ªãch v·ª• chƒÉm s√≥c s·ª©c kh·ªèe b√†n ch√¢n t·ªët nh·∫•t, NAGEN ƒë√£ thi·∫øt l·∫≠p m·∫°ng l∆∞·ªõi h·ª£p t√°c v·ªõi c√°c trung t√¢m y t·∫ø t·∫°i 63 t·ªânh th√†nh.",
    image: "/images/news/expansion.jpg",
    publishDate: "2024-03-05",
    category: "Ho·∫°t ƒë·ªông",
    featured: false
  },
  {
    id: 4,
    title: "H·ªôi th·∫£o khoa h·ªçc v·ªÅ chƒÉm s√≥c s·ª©c kh·ªèe b√†n ch√¢n",
    excerpt: "NAGEN ph·ªëi h·ª£p v·ªõi H·ªôi Ch·ªânh h√¨nh Vi·ªát Nam t·ªï ch·ª©c h·ªôi th·∫£o khoa h·ªçc v·ªÅ c√°c v·∫•n ƒë·ªÅ chƒÉm s√≥c s·ª©c kh·ªèe b√†n ch√¢n.",
    image: "/images/news/seminar.jpg",
    publishDate: "2024-02-28",
    category: "S·ª± ki·ªán",
    featured: false
  },
  {
    id: 6,
    title: "NAGEN nh·∫≠n gi·∫£i th∆∞·ªüng 'Th∆∞∆°ng hi·ªáu tin c·∫≠y 2024'",
    excerpt: "T·∫°i l·ªÖ trao gi·∫£i Th∆∞∆°ng hi·ªáu tin c·∫≠y nƒÉm 2024, NAGEN vinh d·ª± nh·∫≠n gi·∫£i th∆∞·ªüng trong lƒ©nh v·ª±c chƒÉm s√≥c s·ª©c kh·ªèe.",
    image: "/images/news/award-2024.jpg",
    publishDate: "2024-02-20",
    category: "Gi·∫£i th∆∞·ªüng",
    featured: false
  }
]

const categories = [
  "T·∫•t c·∫£",
  "Nghi√™n c·ª©u",
  "S·ª± ki·ªán",
  "Gi·∫£i th∆∞·ªüng",
  "Ho·∫°t ƒë·ªông"
]

export default function NewsPage() {
  const [activeSubmenu, setActiveSubmenu] = useState<string | null>(null)
  const [isConsultationModalOpen, setIsConsultationModalOpen] = useState(false)

  const openConsultationModal = () => setIsConsultationModalOpen(true)
  const closeConsultationModal = () => setIsConsultationModalOpen(false)

  const menuItems = [
    {
      name: "S·∫£n ph·∫©m",
      href: "#products",
      submenu: [
        { name: "T·∫•m l√≥t h·ªó tr·ª£ v√≤m b√†n ch√¢n Sungen", href: "/san-pham/sungen" },
        { name: "T·∫•m l√≥t h·ªó tr·ª£ v√≤m b√†n ch√¢n Winagen", href: "/san-pham/winagen" },
        { name: "T·∫•m l√≥t h·ªó tr·ª£ v√≤m b√†n ch√¢n Softgen", href: "/san-pham/softgen" },
        { name: "T·∫•m l√≥t h·ªó tr·ª£ v√≤m b√†n ch√¢n Endurance", href: "/san-pham/endurance" },
        { name: "T·∫•m l√≥t h·ªó tr·ª£ v√≤m b√†n ch√¢n Silhouette", href: "/san-pham/silhouette" },
        { name: "ƒê·ªám l√≥t gi√†y cao su x·ªëp thi√™n nhi√™n", href: "/san-pham/dem-lot-cao-su" },
      ],
    },
    {
      name: "D·ªãch v·ª•",
      href: "#",
      submenu: [
        { name: "T∆∞ v·∫•n s·∫£n ph·∫©m", href: "#consultation", action: "consultation" },
        { name: "ƒêƒÉng k√Ω ƒëo ch√¢n", href: "#appointment", action: "appointment" },
      ],
    },
    {
      name: "V·∫•n ƒë·ªÅ th∆∞·ªùng g·∫∑p",
      href: "#",
      submenu: [
        { name: "B√†n ch√¢n b·∫πt", href: "/benh-thuong-gap/ban-chan-bet" },
        { name: "Ch√¢n ch·ªØ X, O", href: "/benh-thuong-gap/chan-chu-x-o" },
        { name: "Tho√°t v·ªã ƒëƒ©a ƒë·ªám", href: "/benh-thuong-gap/thoat-vi-dia-dem" },
        { name: "Cong v·∫πo c·ªôt s·ªëng", href: "/benh-thuong-gap/cong-veo-cot-song" },
        { name: "Suy gi√£n tƒ©nh m·∫°ch", href: "/benh-thuong-gap/suy-gian-tinh-mach" },
      ],
    },
    { name: "ƒê·∫°i l√Ω", href: "/dai-ly" },
    { name: "Gi·ªõi thi·ªáu", href: "/gioi-thieu-nagen" },
    { name: "Blog ki·∫øn th·ª©c", href: "/blog-kien-thuc" },
    { name: "Tin t·ª©c", href: "/tin-tuc" },
    { name: "Nghi√™n c·ª©u khoa h·ªçc", href: "/studies" },
    { name: "C√¢u h·ªèi th∆∞·ªùng g·∫∑p", href: "/faqs" },
    { name: "Li√™n h·ªá", href: "/lien-he" },
  ]

  const handleNavigation = (href: string, action?: string) => {
    if (action === "consultation") {
      openConsultationModal()
      return
    }

    if (href.startsWith("/") || href.startsWith("http")) {
      navigateTo(href)
      return
    }

    const targetId = href.substring(1)
    const targetElement = document.getElementById(targetId)
    if (targetElement) {
      targetElement.scrollIntoView({
        behavior: "smooth",
        block: "start",
      })
    }
  }

  return (
    <>
      {/* Contact Info Bar */}
      <div className="bg-[#21395D] text-white py-2 text-sm">
        <div className="container mx-auto px-4 flex justify-between items-center">
          <div className="flex items-center space-x-6">
            <span className="flex items-center">
              <Phone className="w-4 h-4 mr-2" />
              0966578008
            </span>
            <span className="flex items-center">
              <Mail className="w-4 h-4 mr-2" />
              nagen@nagen.vn
            </span>
          </div>
          <div className="hidden md:flex items-center space-x-4">
            <span className="flex items-center">
              <Clock className="w-4 h-4 mr-2" />
              T2-CN: 24/24
            </span>
          </div>
        </div>
      </div>

      {/* Main Navigation */}
      <header className="sticky top-0 z-[1001] bg-white/95 backdrop-blur-md shadow-lg border-b border-gray-200">
        <div className="container mx-auto px-4 py-1">
          <div className="flex items-center justify-between">
            <div>
              <Link href="/" className="flex items-center space-x-3">
                <Image
                  src={getImagePath("/images/logo_slogan_1.png")}
                  alt="NAGEN - T·∫•m l√≥t h·ªó tr·ª£ v√≤m b√†n ch√¢n ch·∫•t l∆∞·ª£ng cao t·ª´ M·ªπ"
                  width={200}
                  height={40}
                  priority
                  title="NAGEN - Th∆∞∆°ng hi·ªáu t·∫•m l√≥t h·ªó tr·ª£ v√≤m b√†n ch√¢n h√†ng ƒë·∫ßu"
                />
              </Link>
            </div>

            {/* Desktop Navigation */}
            <nav className="hidden lg:flex items-center space-x-4">
              {menuItems.map((item) => (
                <div
                  key={item.name}
                  className="relative group"
                  onMouseEnter={() => setActiveSubmenu(item.submenu ? item.name : null)}
                  onMouseLeave={() => setActiveSubmenu(null)}
                >
                  <a
                    href={item.href}
                    className="text-gray-700 hover:text-blue-900 transition-colors font-medium flex items-center py-4 px-2"
                    onClick={(e) => {
                      e.preventDefault()
                      handleNavigation(item.href)
                    }}
                  >
                    {item.name}
                    {item.submenu && <ChevronDown className="w-4 h-4 ml-1" />}
                  </a>

                  {item.submenu && activeSubmenu === item.name && (
                    <div className="absolute top-full left-0 mt-2 w-64 bg-white rounded-lg shadow-lg border py-2 z-50">
                      {item.submenu.map((subItem) => (
                        <a
                          key={subItem.name}
                          href={subItem.href}
                          className="block px-4 py-3 text-gray-700 hover:bg-blue-50 hover:text-blue-900 transition-colors text-sm"
                          onClick={(e) => {
                            e.preventDefault()
                            handleNavigation(subItem.href, (subItem as any).action)
                          }}
                        >
                          {subItem.name}
                        </a>
                      ))}
                    </div>
                  )}
                </div>
              ))}
            </nav>

            {/* Mobile Navigation */}
            <Sheet>
              <SheetTrigger asChild>
                <Button variant="outline" size="icon" className="lg:hidden bg-transparent">
                  <Menu className="h-6 w-6" />
                </Button>
              </SheetTrigger>
              <SheetContent>
                <nav className="flex flex-col space-y-6 mt-8">
                  {menuItems.map((item) => (
                    <a
                      key={item.name}
                      href={item.href}
                      className="text-gray-700 hover:text-blue-900 transition-colors font-medium"
                      onClick={(e) => {
                        e.preventDefault()
                        handleNavigation(item.href)
                      }}
                    >
                      {item.name}
                    </a>
                  ))}
                </nav>
              </SheetContent>
            </Sheet>
          </div>
        </div>
        <div className="w-full h-[8px]">
          <div className="bg-red-600 w-full !h-[calc(8px/1.5)] md:!h-[calc(12px/1.5)]"></div>
          <div className="bg-[#21395D] w-full !h-[calc(8px/1.5)] md:!h-[calc(12px/1.5)]"></div>
        </div>
      </header>

      <div className="min-h-screen bg-gray-50">
        {/* Header */}
        <div className="bg-gradient-to-r from-blue-900 to-red-600 text-white py-16">
          <div className="container mx-auto px-4">
            <div className="max-w-4xl mx-auto text-center">
              <h1 className="text-4xl md:text-5xl font-bold mb-4">
                Tin t·ª©c NAGEN
              </h1>
              <p className="text-xl text-blue-100">
                C·∫≠p nh·∫≠t nh·ªØng th√¥ng tin m·ªõi nh·∫•t v·ªÅ s·∫£n ph·∫©m, nghi√™n c·ª©u v√† ho·∫°t ƒë·ªông c·ªßa NAGEN
              </p>
            </div>
          </div>
        </div>

        <div className="container mx-auto px-4 py-12">
          {/* Featured Article */}
          {newsArticles.filter(article => article.featured).map(article => (
            <div key={article.id} className="mb-12">
              <div className="bg-white rounded-xl shadow-lg overflow-hidden">
                <div className="md:flex">
                  <div className="md:w-1/2">
                    <Image
                      src={getImagePath(article.image)}
                      alt={article.title}
                      width={600}
                      height={400}
                      className="w-full h-64 md:h-full object-cover"
                    />
                  </div>
                  <div className="md:w-1/2 p-8">
                    <Badge className="mb-4 bg-red-100 text-red-800">
                      Tin n·ªïi b·∫≠t
                    </Badge>
                    <h2 className="text-2xl md:text-3xl font-bold text-gray-900 mb-4">
                      {article.title}
                    </h2>
                    <p className="text-gray-600 mb-6 leading-relaxed">
                      {article.excerpt}
                    </p>
                    <div className="flex items-center justify-between mb-6">
                      <div className="flex items-center space-x-4 text-sm text-gray-500">
                        <span className="flex items-center">
                          <Calendar className="w-4 h-4 mr-1" />
                          {new Date(article.publishDate).toLocaleDateString('vi-VN')}
                        </span>
                      </div>
                    </div>
                    <Link href={`/tin-tuc/${article.id}`}>
                      <Button className="bg-blue-900 hover:bg-blue-800">
                        ƒê·ªçc ti·∫øp
                        <ArrowRight className="w-4 h-4 ml-2" />
                      </Button>
                    </Link>
                  </div>
                </div>
              </div>
            </div>
          ))}

          {/* Category Filter */}
          <div className="mb-8">
            <div className="flex flex-wrap gap-2">
              {categories.map((category) => (
                <Button
                  key={category}
                  variant={category === "T·∫•t c·∫£" ? "default" : "outline"}
                  className={category === "T·∫•t c·∫£" ? "bg-blue-900 hover:bg-blue-800" : ""}
                >
                  {category}
                </Button>
              ))}
            </div>
          </div>

          {/* News Grid */}
          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
            {newsArticles.filter(article => !article.featured).map((article) => (
              <Card key={article.id} className="overflow-hidden hover:shadow-lg transition-shadow">
                <div className="relative">
                  <Image
                    src={getImagePath(article.image)}
                    alt={article.title}
                    width={400}
                    height={250}
                    className="w-full h-48 object-cover"
                  />
                  <Badge className="absolute top-4 left-4 bg-white/90 text-gray-800">
                    {article.category}
                  </Badge>
                </div>
                <CardHeader className="pb-3">
                  <CardTitle className="text-lg line-clamp-2 hover:text-blue-900 transition-colors">
                    <Link href={`/tin-tuc/${article.id}`}>
                      {article.title}
                    </Link>
                  </CardTitle>
                </CardHeader>
                <CardContent className="pt-0">
                  <p className="text-gray-600 text-sm line-clamp-3 mb-4">
                    {article.excerpt}
                  </p>
                  <div className="flex items-center text-xs text-gray-500 mb-4">
                    <span className="flex items-center">
                      <Calendar className="w-3 h-3 mr-1" />
                      {new Date(article.publishDate).toLocaleDateString('vi-VN')}
                    </span>
                  </div>
                  <Link href={`/tin-tuc/${article.id}`}>
                    <Button variant="outline" size="sm" className="w-full">
                      ƒê·ªçc th√™m
                      <ArrowRight className="w-3 h-3 ml-2" />
                    </Button>
                  </Link>
                </CardContent>
              </Card>
            ))}
          </div>

          {/* Load More Button */}
          <div className="text-center mt-12">
            <Button variant="outline" size="lg" className="px-8">
              Xem th√™m tin t·ª©c
            </Button>
          </div>
        </div>
      </div>

      <Footer />

      {/* Consultation Modal */}
      <UnifiedRegistrationForm
        isOpen={isConsultationModalOpen}
        onClose={closeConsultationModal}
      />
    </>
  )
}